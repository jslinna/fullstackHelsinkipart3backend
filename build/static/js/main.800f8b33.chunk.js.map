{"version":3,"sources":["components/Filter.js","components/Form.js","components/Contacts.js","services/contacts.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","Form","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Contacts","filteredPersons","persons","filter","it","RegExp","test","name","map","person","key","id","number","onClick","window","confirm","handleClick","handleButtonClick","rows","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","className","message","App","useEffect","contactService","initialContacts","setPersons","useState","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","deleteContact","console","log","n","catch","error","event","target","preventDefault","nameObject","notificationObject","some","e","p","result","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800f8b33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter: <input value={props.newFilter}\r\n      onChange={props.handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n  return(\r\n    <form onSubmit={props.addContact}>\r\n      <div>\r\n        name: <input value={props.newName}\r\n        onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber}\r\n        onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Contacts = (props) => {\r\n  \r\n  let filteredPersons = props.persons.filter(it => new RegExp(props.newFilter,\"i\").test(it.name)) \r\n  const handleButtonClick = (person) => {\r\n    const result = window.confirm(`Do you really want to delete contact: ${person.name} ?`)\r\n    if(result) {\r\n      props.handleClick(person.id)  \r\n    }  \r\n  }\r\n  const rows = (filteredPersons) => filteredPersons.map(person => \r\n        \r\n    <div key={person.id}>\r\n      {person.name} {person.number} <button onClick={() => handleButtonClick(person)}>delete</button>\r\n    </div>\r\n       \r\n  )\r\n\r\n  return(\r\n    <div>{rows(filteredPersons)}</div>\r\n  )\r\n}\r\n\r\nexport default Contacts\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject) \r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response =>response.data)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, id)\r\n  return request.then(response => response.data)\r\n}\r\nexport default { getAll, create, update, deleteContact }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Contacts from './components/Contacts'\nimport contactService from './services/contacts'\nimport './index.css'\n\nconst Notification = (props) => {\n  if(props.notification === '') {\n    return null\n  }\n  \n  if(props.notification.type === 'success') {\n    return (\n      <div className=\"notificationSuccess\">\n        {props.notification.message}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"notificationError\">\n        {props.notification.message}\n      </div>\n    )\n  }\n\n}\n\nconst App = () => {\n   \n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => setPersons(initialContacts))\n      \n  }, [])\n  \n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)  \n  }\n  \n  const addContact = (event) => {\n    event.preventDefault()  \n    const nameObject = {\n      name: newName,\n      number: newNumber      \n    }\n    const notificationObject = {\n      message: notificationMessage,\n      type: ''\n    }\n\n    if(persons.some(e => e.name === newName)) {\n      const person = persons.filter(p => p.name === newName)\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      \n      console.log(person[0].id)\n      if(result) {\n        contactService\n        .update(person[0].id, nameObject)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.map(p => p.id !== person[0].id ? p : response))\n          notificationObject.message = `Updated ${response.name}'s number`\n          notificationObject.type = 'success'\n          setNotificationMessage(notificationObject)\n          setTimeout(() => {\n            setNotificationMessage('')\n          },5000)\n        })\n        .catch (error => {\n          console.log(error)\n          notificationObject.message = `Information of ${person[0].name} has already been removed from the server`\n          notificationObject.type = 'error'\n          setNotificationMessage(notificationObject)\n          setTimeout(() => {\n            setNotificationMessage('')\n          }, 5000)\n          \n        })\n        return  \n      } else {\n        return\n      }\n    }\n\n    contactService \n      .create(nameObject)\n      .then(data => {\n        console.log(data)\n        setPersons(persons.concat(data))\n        setNewName('')\n        setNewNumber('')\n        notificationObject.message = `Added ${data.name}`\n        notificationObject.type = \"success\"\n        setNotificationMessage(notificationObject)\n        setTimeout(() => {\n          setNotificationMessage('')\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  const handleDeleteButtonClick = (id) => {\n    //console.log(id)\n    deleteContact(id)\n  }\n\n  const deleteContact = (id) => {\n    console.log(id)\n    contactService\n      .deleteContact(id)\n      .then(setPersons(persons.filter(n => n.id !== id)))\n      .catch(error => {\n        console.log(error)\n      })\n\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification = {notificationMessage} />\n      <Filter newFilter = {newFilter} handleFilterChange = {handleFilterChange} />\n      <h2>add a new</h2>\n      <Form addContact={addContact} newName = {newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Contacts persons = {persons} newFilter={newFilter} handleClick={handleDeleteButtonClick} />\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}